name: directory_md
on:
  push:
    branches: [ "master" ]

jobs:
  MainSequence:
    name: DIRECTORY.md
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v2
      - name: Setup Git Specs
        run: |
          git config --global user.name github-actions
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
      - name: Update DIRECTORY.md
        shell: python
        run: |
            import os
            from typing import Iterator
            g_output = []
            def good_filepaths(top_dir: str = ".") -> Iterator[str]:
                fs_exts = tuple(".php".split())
                for dirpath, dirnames, filenames in os.walk(top_dir):
                    dirnames[:] = [d for d in dirnames if d[0] not in "._"]
                    for filename in filenames:
                        if os.path.splitext(filename)[1].lower() in fs_exts:
                            yield os.path.join(dirpath, filename).lstrip("./")
            def md_prefix(i):
                return f"{i * '  '}*" if i else "\n##"
            def print_path(old_path: str, new_path: str) -> str:
                global g_output
                old_parts = old_path.split(os.sep)
                for i, new_part in enumerate(new_path.split(os.sep)):
                    if i + 1 > len(old_parts) or old_parts[i] != new_part:
                        if new_part:
                            g_output.append(f"{md_prefix(i)} {new_part.replace('_', ' ').title()}")
                return new_path
            def build_directory_md(top_dir: str = ".") -> str:
                global g_output
                old_path = ""
                for filepath in sorted(good_filepaths(), key=str.lower):
                    filepath, filename = os.path.split(filepath)
                    if filepath != old_path:
                        old_path = print_path(old_path, filepath)
                    indent = (filepath.count(os.sep) + 1) if filepath else 0
                    url = "/".join((".", filepath, filename)).replace(" ", "%20")
                    filename = os.path.splitext(filename.replace("_", " ").title())[0]
                    g_output.append(f"{md_prefix(indent)} [{filename}]({url})")
                return "# List of all files\n" + "\n".join(g_output)
            with open("DIRECTORY.md", "w") as out_file:
                out_file.write(build_directory_md(".") + "\n")
      - name: Commit DIRECTORY.md
        run: |
         git commit -m "updating DIRECTORY.md" DIRECTORY.md ||  true
         git diff DIRECTORY.md
         git push --force origin HEAD:$GITHUB_REF || true
